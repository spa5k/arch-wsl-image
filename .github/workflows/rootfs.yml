name: Build, Push Docker Image and Extract RootFS

on:
  workflow_dispatch:
  push:
    tags:
      - v*
  schedule:
    - cron: '0 0 * * 0'  # Runs at 00:00 UTC every Sunday

permissions:
  contents: write

jobs:
  build-and-push:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-latest-arm64]
        arch: [amd64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract current date and time
        id: date
        run: echo "DATE=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/arch:latest-${{ matrix.arch }}
            ${{ secrets.DOCKER_USERNAME }}/arch:${{ env.DATE }}-${{ matrix.arch }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract RootFS
        run: |
          docker create --name arch ${{ secrets.DOCKER_USERNAME }}/arch:latest-${{ matrix.arch }} echo "Arch Linux"
          docker export -o rootfs-${{ matrix.arch }}.tar arch
          gzip rootfs-${{ matrix.arch }}.tar
          docker rm arch

      - name: Upload RootFS
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-${{ matrix.arch }}
          path: rootfs-${{ matrix.arch }}.tar.gz

      - name: Download RootFS
        uses: actions/download-artifact@v4
        with:
          name: rootfs-${{ matrix.arch }}
          path: rootfs

      - name: List Files
        run: ls -R rootfs

  release:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download RootFS amd64
        uses: actions/download-artifact@v4
        with:
          name: rootfs-amd64
          path: rootfs

      - name: Download RootFS arm64
        uses: actions/download-artifact@v4
        with:
          name: rootfs-arm64
          path: rootfs

      - name: Create GitHub Release
        run: |
          gh release create ${{ env.DATE }} rootfs/rootfs-amd64.tar.gz rootfs/rootfs-arm64.tar.gz --title "Release ${{ env.DATE }}" --notes "Release ${{ env.DATE }} for architectures amd64 and arm64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}