name: Build, Push Docker Image and Extract RootFS

on:
  workflow_dispatch:
  push:
    tags:
      - v*
  schedule:
    - cron: '0 0 * * 0'  # Runs at 00:00 UTC every Sunday

permissions:
  contents: write

jobs:
  extract-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.DATE }}
    steps:
      - name: Extract current date and time
        id: date
        run: echo "DATE=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

  build-and-push-amd64:
    runs-on: ubuntu-latest
    needs: extract-date

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for amd64
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/arch:latest-amd64
            ${{ secrets.DOCKER_USERNAME }}/arch:${{ needs.extract-date.outputs.date }}-amd64

      - name: Extract RootFS for amd64
        run: |
          docker create --name arch-amd64 ${{ secrets.DOCKER_USERNAME }}/arch:latest-amd64 echo "Arch Linux"
          docker export -o rootfs-amd64.tar arch-amd64
          gzip rootfs-amd64.tar
          docker rm arch-amd64

      - name: Upload RootFS amd64
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-amd64
          path: rootfs-amd64.tar.gz

  build-and-push-arm64:
    runs-on: ubuntu-latest
    needs: extract-date

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for arm64
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/arch:latest-arm64
            ${{ secrets.DOCKER_USERNAME }}/arch:${{ needs.extract-date.outputs.date }}-arm64

      - name: Extract RootFS for arm64
        run: |
          docker create --name arch-arm64 ${{ secrets.DOCKER_USERNAME }}/arch:latest-arm64 echo "Arch Linux"
          docker export -o rootfs-arm64.tar arch-arm64
          gzip rootfs-arm64.tar
          docker rm arch-arm64

      - name: Upload RootFS arm64
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-arm64
          path: rootfs-arm64.tar.gz

  release:
    needs: [build-and-push-amd64, build-and-push-arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download RootFS amd64
        uses: actions/download-artifact@v4
        with:
          name: rootfs-amd64
          path: rootfs

      - name: Download RootFS arm64
        uses: actions/download-artifact@v4
        with:
          name: rootfs-arm64
          path: rootfs

      - name: Create GitHub Release
        run: |
          gh release create ${{ needs.extract-date.outputs.date }} rootfs/rootfs-amd64.tar.gz rootfs/rootfs-arm64.tar.gz --title "${{ needs.extract-date.outputs.date }}" --notes "Release ${{ needs.extract-date.outputs.date }} for architectures amd64 and arm64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
